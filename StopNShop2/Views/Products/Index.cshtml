@model IEnumerable<StopNShop2.Models.Product>

@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="justify-content-center d-flex align-content-center"><h1>Shop</h1></div>

<!--
    Needs work. Preferred display would have products displayed in a grid (table), each entry in the table having each product's info.
    Free shipping should display an icon if true.
    Rating needs to be reworked or removed; current implementation does nothing. Should be an average of user reviews. Currently no way to review products, no way for products table to access those reviews.
    PreviousPrice should only display if Price < PreviousPrice, indicating a sale
    ImagePath not implemented, admin has no way to upload an image currently.
-->
<form asp-action="Index" method="get">
    <div class="justify-content-center d-flex align-content-center">
        <p>
            Search Products: <input type="text" name="searchString" value=""/>
            <a asp-action="Index">Remove Filter</a>
        </p>
    </div>
</form>
@if (User.IsInRole("Admin"))
{
<div class="justify-content-center d-flex align-content-center">
    <a asp-action="Create">Create New</a>
</div>
}
@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ImageUpload.ImagePath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PreviousPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FreeShipping)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <img id="prodImg" style="width:150px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(item.ImageUpload.ImagePath))">
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PreviousPrice)
            </td>
            <td>
                @if (item.FreeShipping)
                {
                    <img src="~/Images/freeshippingtruck.png" alt="Available" width="50" runat="server">
                }
                else
                {
                    <div class="text-danger">Unavailable</div>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            
                <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.ProductId">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                    }
                    <a asp-action="Cart" asp-route-id="@item.ProductId">Buy</a>
                </td>
            
        </tr>
        }
    </tbody>
</table>*@



@foreach (var item in Model)
{
    <div class="p-2">
        <div class="d-flex justify-content-center align-item-center">
            <div class="flex-column p-2 m-auto border text-center">
                <div>
                    <img id="prodImg" style="width:150px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(item.ImageUpload.ImagePath))">
                </div>
                <div class="text-center">
                    <b>@Html.DisplayFor(modelItem => item.Title)</b>
                </div>
                @if (item.Price < item.PreviousPrice)
                {
                    decimal price = item.Price;
                    decimal previousPrice = item.PreviousPrice;
                    int discount = (int)(((previousPrice - price) / previousPrice) * 100);
                    string discString = discount.ToString();

                    <div class="text-danger">
                        <s>$@Html.DisplayFor(modelItem => item.PreviousPrice)</s>
                    </div>
                    <div>
                        $@Html.DisplayFor(modelItem => item.Price)
                    </div>
                    <div class="text-success">
                        @discString% off!
                    </div>
                }
                else
                {
                    <div>
                        $@Html.DisplayFor(modelItem => item.Price)
                    </div>
                }
                <div>
                    Category: @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </div>
                @if (item.FreeShipping)
                {
                    <div>
                        <img src="~/Images/freeshippingtruck.png" alt="Available" width="50" runat="server">
                    </div>
                }
                else
                {
                    <div class="text-danger">Free Shipping Unavailable</div>
                }
                <div>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.ProductId">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                    }
                    <a asp-action="Cart" asp-route-id="@item.ProductId">Buy</a>
                </div>
            </div>
        </div>
    </div>
}